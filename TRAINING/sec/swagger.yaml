---
  swagger: "2.0"
  info:
    version: "1.0.0"
    title: "Swagger SEC"
    description: "A sample API"
    termsOfService: "http://swagger.io/terms/"
    contact:
      name: "SAP SEC API Team"
    license:
      name: "MIT"
    basePath: "/"
  schemes:
    - "http"
    - "https"
  consumes:
    - "application/json"
  produces:
    - "application/json"
  paths:
    /orders:
      get:
        description: "Returns all orders"
        operationId: "allOrders"
        produces:
          - "application/json"
        parameters:
          -
            name: "tags"
            in: "query"
            description: "tags to filter by"
            required: false
            type: "array"
            items:
              type: "string"
            collectionFormat: "csv"
          -
            name: "limit"
            in: "query"
            description: "maximum number of results to return"
            required: false
            type: "integer"
            format: "int32"
        responses:
          "200":
            description: "order response"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Order"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/ErrorModel"
      post:
        description: "Creates a order."
        operationId: "createOrder"
        produces:
          - "application/json"
        parameters:
          -
            name: "order"
            in: "body"
            description: "Order to create."
            required: true
            schema:
              $ref: "#/definitions/NewOrder"
        responses:
          "200":
            description: "order response"
            schema:
              $ref: "#/definitions/Order"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/ErrorModel"
    /orders/{id}:
      get:
        description: "Returns a order by ID."
        operationId: "orderById"
        produces:
          - "application/json"
        parameters:
          -
            name: "id"
            in: "path"
            description: "ID of order to fetch"
            required: true
            type: "integer"
            format: "int64"
        responses:
          "200":
            description: "order response"
            schema:
              $ref: "#/definitions/Order"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/ErrorModel"
      delete:
        description: "Deletes a order"
        operationId: "deleteOrder"
        parameters:
          -
            name: "id"
            in: "path"
            description: "ID of order to delete."
            required: true
            type: "integer"
            format: "int64"
        responses:
          "204":
            description: "order deleted"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/ErrorModel"
  definitions:
    Order:
      type: "object"
      allOf:
        -
          $ref: "#/definitions/NewOrder"
        -
          required:
            - "id"
          properties:
            id:
              type: "string"
    NewOrder:
      type: "object"
      required:
        - "name"
      properties:
        sampleId:
          type: "string"
        dns:
          type: "string"
        start:
          type: "date"
        end:
          type: "date"
        status:
          type: "string"
    ErrorModel:
      type: "object"
      required:
        - "code"
        - "message"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
